is.na(data)
names(is.na(data))
head(is.na(data))
is.na(data)[,"steps"]
is.na(data)
data[is.na(data)][",steps"]
data[is.na(data),][,"steps"]
data[is.na(data),]
dim(data[is.na(data),])
dim(data)
apply(data[is.na(data),1,function(x) print(x$steps))
apply(data[is.na(data),],1,function(x) print(x$steps))
apply(data[is.na(data),],1,function(x) print(x))
apply(data[is.na(data),],1,function(x) print(x["steps"]))
apply(data[is.na(data),],1,function(x) x["intervak"])
apply(data[is.na(data),],1,function(x) x["interval"])
apply(data[is.na(data),],1,function(x) x["interval"]=bjasb)
average_data[[match(2355,unique(data$interval))]]
apply(data[is.na(data),],1,function(x) x["interval"]=average_data[[match(x["interval"],unique(data$interval))]])
apply(data[is.na(data),],1,function(x) x["interval"]=average_data[[match(x["interval"],unique(data$interval))]])
average_data[match(2355,unique(data$interval))]
average_data[[match(2355,unique(data$interval))]]
apply(data[is.na(data),],1,function(x) x["interval"]=average_data[[match(x["interval"],unique(data$interval))]],)
data[is.na(data),]
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[[match(x["interval"],unique(data$interval))]],)
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[[match(x["interval"],unique(data$interval))]])
average_data[[match(x["interval"],unique(data$interval))]]
data[is.na(data),][,'interval']
data[is.na(data),][,'interval'][1]
average_data[[data[is.na(data),][,'interval'][1],unique(data$interval))]]
average_data[[data[is.na(data),][,'interval'][1],unique(data$interval)]]
data[is.na(data),][,'interval'][1]
average_data[[match(data[is.na(data),][,'interval'][1],unique(data$interval))]]
apply(data[is.na(data),],1,function(x) x["steps"])
apply(data[is.na(data),],1,function(x) x["steps",])
apply(data[is.na(data),],1,function(x) x[,"steps"])
apply(data[is.na(data),],1,function(x) print(x["steps"],"Hello") )
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[[match(x["interval"],unique(data$interval))]])
data$interval[1]
data$interval[2]
data$interval[5]
data$interval[6]
data$interval[55]
data$interval[12]
data$interval[13]
average_data[[1]]
average_data[1]
average_data[2]
average_data[3]
average_data[4]
average_data[5]
average_data[12]
average_data[13]
average_data[data$interval[5]/5+1]
average_data[data$interval[10]/5+1]
data$interval[10]
average_data[data$interval[20]/5+1]
data$interval[20]
average_data[data$interval[15]/5+1]
data$interval[15]
average_data[data$interval[11]/5+1]
data$interval[11]
data$interval[12]
average_data[data$interval[12]/5+1]
data$interval[13]
average_data[data$interval[13]/5+1]
average_data
data$interval[13]
average_data
average_data[1]
average_data[13]
data$interval[14]
data$interval[13]
data$interval[14]
average_data[14]
average_data[15]
average_data[12]
unique(data$interval)
data[is.na(data),]
data[is.na(data),][1]
data[is.na(data),][2]
data[is.na(data),][3]
sapply(data[is.na(data),][3],function(x) bjsabj]
average_data[[match(data[is.na(data),][,'interval'][1],unique(data$interval))]]
sapply(data[is.na(data),][3],function(x) average_data[[match(x,unique(data$interval))]]]
sapply(data[is.na(data),][3],function(x) average_data[[match(x,unique(data$interval))]])
match(5,unique(data$interval))
match(100,unique(data$interval))
average_data[match(100,unique(data$interval))]
average_data[[match(100,unique(data$interval))]]
average_data[match(2355,unique(data$interval))]
sapply(data[is.na(data),][3],1,function(x) average_data[[match(x,unique(data$interval))]])
sapply(data[is.na(data),][3],1,function(x) average_data[[match(x,unique(data$interval))]])
data[is.na(data),][3]
class(data[is.na(data),][3])
data[is.na(data),][3][1]
data[is.na(data),][3]
vector(data[is.na(data),][3])
?vector
as.vector(data[is.na(data),][3])
sapply(as.vector(data[is.na(data),][3]),function(x) average_data[[match(x,unique(data$interval))]])
sapply(as.vector(data[is.na(data),][3]),function(x) x)
sapply(as.vector(data[is.na(data),][3]),function(x) print("Hello"))
sapply(as.vector(data[is.na(data),][3]),function(x) x[1]
)
sapply(as.vector(data[is.na(data),][3]),function(x) x[2])
sapply(as.vector(data[is.na(data),][3]),function(x) x[3])
sapply(as.vector(data[is.na(data),][3]),function(x) x[3])bsk
for x in as data[is.na(data),]:
for x in dim(data[is.na(data),])[0]{print x}
for x in dim(data[is.na(data),])[0]{x}
for (x in dim(data[is.na(data),])[0]){x}
for (x in dim(data[is.na(data),])[0]){print(x)}
for (x in dim(data[is.na(data),])[1]){print(x)}
for (x in dim(data[is.na(data),])[1]){print(x)}
dim(data[is.na(data),]
)
for (x in seq(0nkxzdim(data[is.na(data),])[1]){print(x)}
data[is.na(data),]),][1]
data[is.na(data),]),]
data[is.na(data),]
data[is.na(data),][1]
for (x in seq({print(x)}
)
]
data[is.na(data),][1]
data[is.na(data),][1,]
for (x in seq(1,dim(data[is.na(data),]) {}
for (x in seq(1,dim(data[is.na(data),]) { }
for (x in seq(1,dim(data[is.na(data),]) {
for (x in seq(1,dim(data[is.na(data),])) {}
for (x in seq(1,dim(data[is.na(data),])) {}
for (x in seq(1,dim(data[is.na(data),])){
for (x in seq(1,dim(data[is.na(data),]))){
data[is.na(data),][x,]=averankn}
average_data[match(2355,unique(data$interval))]
for (x in seq(1,dim(data[is.na(data),]))){
data[is.na(data),][x,][1]=average_data[match(data[is.na(data),][x,],unique(data$interval))]
}
data[is.na(data),][1,][1]
data[is.na(data),][2,][1]
for (x in seq(1,dim(data[is.na(data),]))){
data[is.na(data),][x,][1]=average_data[match(data[is.na(data),][x,][1],unique(data$interval))]
}
for (x in seq(1,dim(data[is.na(data),])[1])){
bjasb}
dim(data[is.na(data),])
dim(data[is.na(data),])[1]
for (x in seq(1,dim(data[is.na(data),])[1])){
data[is.na(data),][x,][1]=average_data[match(data[is.na(data),][x,][1],unique(data$interval))]
}
data
head(data)
data[is.na(data),]
sapply(data[is.na(data),][3],1,function(x) average_data[[match(x,unique(data$interval))]])
apply(data[is.na(data),],1,function(x) print("Hello"))
apply(data[is.na(data),],1,function(x) print("Hello",x))
apply(data[is.na(data),],1,function(x) print(x))
apply(data[is.na(data),],1,function(x) print(x["steps"]))
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[[match(x["interval"],unique(data$interval))]])
avergae_data[1]
average_data[1]
average_data[1][0]
average_data[1][]
average_data[1][1]
average_data("1")
average_data("0")
average_data(0)
average_data(5)
average_data
average_data["0"]
average_data["5"]
average_data["100"]
average_data["2355"]
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[str(x["interval"])])
str(data[is.na(data),][1,])
str(data[is.na(data),][1,][1])
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[str(x["interval"])])
string(1)
?string
tpstring(1)
tostring(1)
toString(1)
apply(data[is.na(data),],1,function(x) x["steps"]=average_data[toString(x["interval"])])
data[is.na(data),]
head(data)
apply(data[is.na(data),],1,function(x) average_data[toString(x["interval"])])
a <- apply(data[is.na(data),],1,function(x) average_data[toString(x["interval"])])
a
data[is.na(data),][,1]
data[is.na(data),][,1]=a
data[is.na(data),][,1]
data[is.na(data),][,1]=a
data[is.na(data),][,1]
head(data)
dim(data[is.na(data),])
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
dim(data[is.na(data),])
apply(data[is.na(data),],1,function(x) average_data[toString(x["interval"])])
dim(data[is.na(data),])
a <- apply(data[is.na(data),],1,function(x) average_data[toString(x["interval"])])
data[is.na(data),][,1]=a
data[is.na(data),][,1]
data[is.na(data),]
average_data["955"]
dim(data[is.na(data),])
head(data)
head(data,n-100)
head(data,n=100)
head(data,n=200)
average_data["1525"]
average_data["1635"]
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
data[200,]
a <- apply(data[is.na(data),],1,function(x) average_data[toString(x["interval"])])
a
data[200,]
data[100]
data[100,]
data[10,]
data[14,]
data[15,]
a <- apply(data[is.na(data),],1,function(x) x)
a
average_data["40"]
average_data["  40"]
average_data["2330"]
average_data["233"]
average_data[" 233"]
average_data["100"]
average_data[" 100"]
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
a <- apply(data[is.na(data),],1,function(x) x["interval"])
a
a <- apply(data[is.na(data),],1,function(x) average_data[toString(x["interval"])]bsjb)
?toString
?str_replace_all
a <- apply(data[is.na(data),],1,function(x) average_data[str_replace_all(string=toString(x["interval"])],pattern=" ",repl="")
a <- apply(data[is.na(data),],1,function(x) average_data[str_replace_all(string=toString(x["interval"])],pattern=" ",repl="")
a <- apply(data[is.na(data),],1,function(x) average_data[str_replace_all(string=toString(x["interval"]),pattern=" ",repl="")])
?str_replace_all
a <- apply(data[is.na(data),],1,function(x) average_data[str_replace(string=toString(x["interval"]),pattern=" ",repl="")])
a <- apply(data[is.na(data),],1,function(x) average_data[gsub(string=toString(x["interval"]),pattern=" ",repl="")])bjd
?trimSpace
install.packages("seqinr")
library(seqinr)
?trimSpace
a <- apply(data[is.na(data),],1,function(x) average_data[trimSpace(toString(x["interval"]),leading=TRUE,space=" ")])
a
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
a <- apply(data[is.na(data),],1,function(x) average_data[trimSpace(toString(x["interval"]),leading=TRUE,space=" ")])
data[is.na(data),][,1]
data[is.na(data),][,1] <- a
data[is.na(data),]
head(data)
average_data[[0]]
average_data["0"]
average_data["25"]
average_data["15"]
print(data,type="html")
print(head(data),type="html")
a<- print(head(data),type="html")
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
new_data <- data[!is.na(data),]
factored_data <- transform(new_data,date=factor(date))
split_data <- split(new_data,new_data$date)
total_steps <- sapply(split_data,function(x) sum(x[,"steps"]))
total_steps
mean(total_steps)
median(total_steps)
factored_data <- transform(new_data,date=factor(date))
split_data <- split(new_data,new_data$date)
total_steps <- sapply(split_data,function(x) sum(x[,"steps"]))
new_mean <- mean(total_steps)
new_median <- median(total_steps)
mean
new_mean
a <- apply(data[is.na(data),],1,function(x) average_data[trimSpace(toString(x["interval"]),leading=TRUE,space=" ")])
data[is.na(data),][,1] <- a
factored_data <- transform(new_data,date=factor(date))
split_data <- split(new_data,new_data$date)
total_steps <- sapply(split_data,function(x) sum(x[,"steps"]))
new_mean <- mean(total_steps)
new_median <- median(total_steps)
new_mean
new_median
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
new_data <- data[!is.na(data),]
factored_data <- transform(new_data,date=factor(date))
split_data <- split(new_data,new_data$date)
total_steps <- sapply(split_data,function(x) sum(x[,"steps"]))
#Calculate and report the mean and median total number of steps taken per day
mean <- mean(total_steps)
median <- median(total_steps)
mean
median
new_median
new_mean
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
new_data <- data[!is.na(data),]
dim(new_data)
new_data
factored_data <- transform(new_data,date=factor(date))
split_data <- split(new_data,new_data$date)
total_steps <- sapply(split_data,function(x) sum(x[,"steps"]))
total_steps
means <- mean(total_steps)
medians <- median(total_steps)
means
medians
data <- read.csv("activity.csv",header=TRUE,sep=",",na.strings="NA")
a <- apply(data[is.na(data),],1,function(x) average_data[trimSpace(toString(x["interval"]),leading=TRUE,space=" ")])
data[is.na(data),][,1] <- a
new_data <- data
head(new_data)
factored_data <- transform(new_data,date=factor(date))
split_data <- split(new_data,new_data$date)
total_steps <- sapply(split_data,function(x) sum(x[,"steps"]))
new_mean <- mean(total_steps)
new_median <- median(total_steps)
new_mean
new_median
total_steps
new_mean
median(total_steps)
medians
means
?weekdays
data$date[1]
as.POSIXct(data$date[1])
isWeekday(as.POSIXct(data$date[1]))
install.packages("timeDay")
install.packages("timeDate")
library("timeDate")
isWeekday(as.POSIXct(data$date[1]))
isWeekday(as.POSIXct(data$date[2]))
isWeekday(as.POSIXct(data$date[3]))
isWeekday(as.POSIXct(data$date[100]))
isWeekday(as.POSIXct(data$date[200]))
isWeekday(as.POSIXct(data$date[300]))
isWeekday(as.POSIXct(data$date[600]))
isWeekday(as.POSIXct(data$date[1]))
isWeekend(as.POSIXct(data$date[1]))
isWeekend(2011-10-01)
isWeekend("2011-10-01 IST")
isWeekend("2011-9-31 IST")
isWeekend("2011-31-1 IST")
isWeekend("2011-9-30 IST")
isWeekday(as.POSIXct(data$date[1]))
?data.table
?data.frane
?data.frame
?data.table
library(data.table)
?data.table
data.table(data,keep.rownames=TRUE)
data <- data.table(data,keep.rownames=TRUE)
data
data[17568]
data[:Weekday=isWeekday(as.POSIXct(date))]
data[,Weekday:=isWeekday(as.POSIXct(date))]
data
data <- ttransform(data,Weekday <- factor(Weekday))
data <- transform(data,Weekday <- factor(Weekday))
data$Weekday
data <- transform(data,Weekday <- factor(data$Weekday))
data$Weekday
data <- transform(data,Weekday <- factor(data$Weekday))
data <- transform(data,Weekday=factor(data$Weekday))
data$Weekday
factored_data <- transform(new_data,interval=factor(interval))
factored_data$Weekday
factored_data <- transform(data,interval=factor(interval))
factored_data$Weekday
split_data <- split(data,data$Weekday)
split_data["TRUE"]
split_data_weekday_interval <- split(split_data["TRUE"],split_data["TRUE"]$interval)
split_data_weekday_interval <- split(split_data["TRUE"],data$interval)
split_data_weekday_interval
split_data_weekday_interval <- split(split_data["TRUE"],data$interval)asa
class(split_data["TRUE"])
split_data["TRUE"]
unlist(split_data["TRUE"])
class(unlist(split_data["TRUE"]))
split_data["TRUE"]
split_data[[1]]
split_data[[0]]
split_data[[2]]
class(split_data[[2]])
class(split_data[[1]])
split_data_weekday_interval <- split(split_data[[1]],data$interval)
split_data_weekday_interval
split_data_weekend_interval <- split(split_data[[2]],data$interval)
average_data_weekday <- sapply(split_data_weekday_interval,function(x) mean(x[,"steps"]))
average_data_weekday
average_data_weekday <- sapply(split_data_weekend_interval,function(x) mean(x[,"steps"]))
average_data_weekday
split_data_weekend_interval <- split(split_data[[2]],data$interval)
split_data_weekday_interval <- split(split_data[[1]],data$interval)
split_data_weekday_interval[[1]]
split_data_weekday_interval[[2]]
split_data_weekday_interval[[2]][,'steps']
split_data_weekday_interval[[2]][,1]
split_data_weekday_interval[[2]][,2]
split_data_weekday_interval[[2]][2]
split_data_weekday_interval[[2]][2,]
split_data_weekday_interval[[2]][1,]
split_data_weekday_interval[[2]][,1]
split_data_weekday_interval[[2]]
class(split_data_weekday_interval[[2]])
split_data_weekday_interval[[2]]
split_data_weekday_interval[[2]][1,]
split_data_weekday_interval[[2]][1:10,]
split_data_weekday_interval[[2]][,2]
split_data_weekday_interval[[2]][2]
split_data_weekday_interval[[2]]["steps"]
split_data_weekday_interval[[2]][,"steps"]
split_data_weekday_interval[[2]][,steps]
mean(split_data_weekday_interval[[2]][,steps])
average_data_weekday <- sapply(split_data_weekday_interval,function(x) mean(x[,steps]))
average_data_weekday
average_data_weekend <- sapply(split_data_weekend_interval,function(x) mean(x[,steps]))
average_weekend[[1]]
average_data_weekend[[1]]
average_data_weekday[[1]]
average_data_weekday[[6]]
average_data_weekday[[6]]
average_data_weekday[[10]]
average_data_weekend[[10]]
plot(unlist(average_data),type="l",ylab="Average Steps",xlab="Intervals")bjca
ggplot(average_data_weekend,aes(steps,interval))
class(average_data_weekend)
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals")bjca
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals")
plot(unlist(average_data_day),type="l",ylab="Average Steps",xlab="Intervals")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
par(mfrow=c(1,2))
par(mfrow=c(2,1))
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
par(mfrow=c(2,1))
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
grid(lwd=3)
title("Average Steps Across Days In The Intervals On Weekdays")
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
grid(lwd=3)
title("Average Steps Across Days In The Intervals On Weekends")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
grid(lwd=3)
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
grid(lwd=3)
title("Average Steps Across Days In The Intervals On Weekends")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals")
grid(lwd=3)
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals",main="Average Steps Across Days In The Intervals On Weekdays")
grid(lwd=3)
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals",main="Average Steps Across Days In The Intervals On Weekends")
grid(lwd=3)
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals",main="Weekdays")
grid(lwd=3)
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals",main="Weekends")
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals",main="Weekdays")
grid(lwd=3)
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals",main="Weekends")
grid(lwd=3)
plot(unlist(average_data_weekday),type="l",ylab="Average Steps",xlab="Intervals",main="Weekdays")
grid(lwd=3)
plot(unlist(average_data_weekend),type="l",ylab="Average Steps",xlab="Intervals",main="Weekends")
grid(lwd=3)
?knit2html
list.files()
list.files("/RepData_PeerAssessment1"")
list.files("/RepData_PeerAssessment1/"")
list.files("/RepData_PeerAssessment1/)
list.files("/RepData_PeerAssessment1")
list.files("./RepData_PeerAssessment1")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
library("knitr")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
dim(data)
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
dim(data)
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("./RepData_PeerAssessment1/PA1_template.Rmd")
setwd("~/Documents/Shikhar/Coursera/Data Science /Reproducable Rsearch/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
?plot
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
